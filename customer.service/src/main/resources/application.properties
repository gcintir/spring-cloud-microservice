server.port=0
spring.application.name=customer-service
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.devtools.restart.enabled=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# heartbeat settings
eureka.client.register-with-eureka=true
eureka.client.heartbeat-executor-exponential-back-off-bound=10
eureka.client.should-unregister-on-shutdown=true
eureka.client.should-enforce-registration-at-init=true
# eureka client pools eureka service url from properties periodically
eureka.client.eureka-service-url-poll-interval-seconds=300
# eureka instance send heartbeat to eureka server periodically
eureka.instance.lease-renewal-interval-in-seconds=5
# if eureka server does not receive a hearbeat, it waits configurative time to remove this instance from registry
eureka.instance.lease-expiration-duration-in-seconds=10


# instance info settings
eureka.client.initial-instance-info-replication-interval-seconds=5
eureka.client.instance-info-replication-interval-seconds=15


# registry settings
eureka.client.fetch-registry=true
eureka.client.registry-fetch-interval-seconds=10
eureka.client.disable-delta=true


# Actuator settings
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


# If Hysterix will be used in project, set below parameter to true
feign.hystrix.enabled=true


spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1